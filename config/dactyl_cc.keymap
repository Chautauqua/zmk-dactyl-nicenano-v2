#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


// #############      LAYERS        #################
#define SYM_L 1
#define NAV_L 2
#define NAV2_L 3
//#define OTHER_L 4

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define SYMBOL  3

// Desktop and tab navigation shortcuts
#define DESKTOP_LT   LC(LG(LEFT))
#define DESKTOP_RT   LC(LG(RIGHT))
#define WINDOW_LT    LA(LS(TAB))
#define WINDOW_RT    LA(TAB)
#define TAB_LT       LC(LS(TAB))
#define TAB_RT       LC(TAB)

// Generic bindings
#define KILL_WINDOW  LA(F4)
#define MAXIMIZE  LG(UP)
#define MINIMIZE  LG(DOWN)
#define UN_MINIMIZE  LG(LC(N))

&mt {
    tapping-term-ms = <500>;
};


 &sl {
     release-after-ms = <2000>;
 };

/ {
    macros {
        uppercase_G: uppercase_G {
            label = "uppercase_G";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp G>
                , <&macro_release &kp LSHFT>
                ;
      };
    };

    combos {
        compatible = "zmk,combos";
        combo_q {
            timeout-ms = <50>;
            key-positions = <5 6>;
            bindings = <&kp Q>;
        };
        combo_z {
            timeout-ms = <50>;
            key-positions = <5 7>;
            bindings = <&kp Z>;
        };
        combo_aa {
            timeout-ms = <50>;
            key-positions = <6 9>;
            bindings = <&kp SE_AA>;
        };
        combo_ae {
            timeout-ms = <50>;
            key-positions = <7 9>;
            bindings = <&kp SE_AE>;
        };
        combo_oe {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp SE_OE>;
        };
        combo_return {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp RETURN>;
        };
        combo_esc {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp ESCAPE>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
    &kp F1            &kp F2    &kp F3   &kp F4   &kp F5   &kp F6            &kp F7     &kp F8    &kp F9      &kp F10    &kp F11     &kp F12
    &kp MINUS         &kp N1    &kp N2   &kp N3   &kp N4   &kp N5            &kp N6     &kp N7    &kp N8      &kp N9     &kp N0      &kp EQUAL
    &kp LBKT          &kp Q     &kp W    &kp E    &kp R    &kp T             &kp Y      &kp U     &kp I       &kp O      &kp P       &kp RBKT
    &kp NON_US_BSLH   &kp A     &kp S    &kp D    &kp F    &kp G             &kp H      &kp J     &kp K       &kp L      &kp SEMI    &kp FSLH
    &kp LSHIFT        &kp Z     &kp X    &kp C    &kp V    &kp B             &kp N      &kp M     &kp COMMA   &kp DOT    &kp FSLH    &kp RSHIFT
                                         &kp SINGLE_QUOTE  &kp LS(N2)   
                                                &mo LOWER  &kp SPACE   
                                                                             &kp DEL    &kp LALT  
                                                                             &kp K_APP  &kp LG(TAB)  
                                                  &kp TAB  &kp ESC   
                                                &kp LCTRL  &kp BSPC  
                                                                             &kp RET    &mo RAISE           
                                                                             &kp LPAR   &kp RPAR 
            >;
        };


    


    };
};


   
   
        //other_layer {
           // bindings = <
             //   &none     &none     &none      &none          &none       &none           &kp C_PREV         &kp C_PLAY_PAUSE      &kp C_NEXT     &none
               // &none     &none     &none      &none  &none     &kp C_MUTE           &kp C_VOLUME_DOWN         &kp   C_VOLUME_UP    &none     &none
 //               &none     &none     &none      &none          &none       &none           &none       &kp  C_BRIGHTNESS_DEC     &kp    C_BRIGHTNESS_INC  &none
   //                                               &none          &none       &none           &none
     //       >;
       // };
